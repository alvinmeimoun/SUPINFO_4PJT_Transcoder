@model List<Core.Transcoder.DataAccess.ViewModels.ListTaskViewModel>
<p>
    @Html.ActionLink("Nouvelle Conversion", "AddConversion", new { @class = "btn btn-primary" })
</p>

<table class="table table-striped table-condensed table-no-bordered" data-toggle="table" data-pagination="true" data-filter-control="true">
    <thead>
        <tr>
            <th data-field="PK_ID_TASK" data-sortable="true" data-filter-control="input">
               Id
            </th>
            <th data-field="FILE_URL_ACCESS" data-sortable="true" data-filter-control="input" width="10%">
                Nom du fichier
            </th>
            @*<th data-field="FORMAT_TYPE" data-sortable="true" data-filter-control="input">
                    @Html.DisplayNameFor(model => model.FORMAT_TYPE)
                </th>*@
            <th data-field="FORMAT_BASE" data-sortable="true" data-filter-control="input">
               Format de base
            </th>
            <th data-field="FORMAT_CONVERT" data-sortable="true" data-filter-control="input">
               Format de conversion
            </th>
            <th data-field="DURATION" data-sortable="true" data-filter-control="input">
                Durée(minutes)
            </th>
            <th data-field="STATUS" data-sortable="true" data-filter-control="input">
                Statut
            </th>

            <th data-field="PRICE" data-sortable="true" data-filter-control="input"> 
                Prix
            </th>
            <th data-width="1px"></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.ToList().Count(); i++)
        
            {
            <tr>
                @Html.HiddenFor(modelItem => Model.ToList()[i].FK_ID_USER, new { Name = "ListOfConversions[" + i + "].FK_ID_USER" })
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].PK_ID_TASK, new { Name = "ListOfConversions[" + i + "].PK_ID_TASK" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FILE_URL_ACCESS, new { Name = "ListOfConversions[" + i + "].FILE_URL_ACCESS" })
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.FORMAT_TYPE)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FORMAT_BASE, new { Name = "ListOfConversions[" + i + "].FORMAT_BASE" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FORMAT_CONVERT, new { Name = "ListOfConversions[" + i + "].FORMAT_CONVERT" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].DURATION, new { Name = "ListOfConversions[" + i + "].DURATION" }) minutes
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model.ToList()[i].STATUS, new { Name = "ListOfConversions[" + i + "].STATUS" })
                </td>
                <td style="color:greenyellow;">
                    @Html.DisplayFor(modelItem => Model.ToList()[i].PRICE, new { Name = "ListOfConversions[" + i + "].PRICE" }) €
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                    @Html.ActionLink("Supprimer", "DeleteConversion", new { id = Model.ToList()[i].PK_ID_TASK }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

