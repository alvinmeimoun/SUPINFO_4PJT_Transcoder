@using Core.Transcoder.Utils.Resources
@using Microsoft.SqlServer.Server
@model List<Core.Transcoder.DataAccess.ViewModels.ListTaskViewModel>
<head>
    <title>@UiStrings.myconversions_title</title>
</head>
<p>
    @Html.ActionLink(@UiStrings.listconversion_button_add_conversion, "AddConversion",null, new { @class = "btn btn-primary" })
</p>

<table class="table table-striped table-condensed table-no-bordered" data-toggle="table" data-pagination="true" data-filter-control="true">
    <thead>
        <tr>
            @*<th data-field="PK_ID_TASK" data-sortable="true" data-filter-control="input">
               Id
            </th>*@
            <th data-field="FILE_URL_ACCESS" data-sortable="true" data-filter-control="input" width="10%" data-width="20%">
                @UiStrings.addconversion_form_filename
            </th>
            @*<th data-field="FORMAT_TYPE" data-sortable="true" data-filter-control="input">
                    @Html.DisplayNameFor(model => model.FORMAT_TYPE)
                </th>*@
            <th data-field="FORMAT_BASE" data-sortable="true" data-filter-control="input">
               @UiStrings.addconversion_form_originformat
            </th>
            <th data-field="FORMAT_CONVERT" data-sortable="true" data-filter-control="input">
               @UiStrings.addconversion_form_convertedformat
            </th>
            <th data-field="DURATION" data-sortable="true" data-filter-control="input">
                @UiStrings.addconversion_form_length
            </th>
            <th data-field="STATUS" data-sortable="true" data-filter-control="input">
                @UiStrings.addconversion_form_status
            </th>

            <th data-field="PRICE" data-sortable="true" data-filter-control="input"> 
                @UiStrings.addconversion_form_price
            </th>
            <th data-width="1px"></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.ToList().Count(); i++)
        
            {
            <tr>
               
                <td>
                    @Html.HiddenFor(modelItem => Model.ToList()[i].FK_ID_USER, new { Name = "ListOfConversions[" + i + "].FK_ID_USER" })
                    @Html.HiddenFor(modelItem => Model.ToList()[i].PK_ID_TASK, new { Name = "ListOfConversions[" + i + "].PK_ID_TASK" })
                    @Html.HiddenFor(modelItem => Model.ToList()[i].FILE_URL_ACCESS, new { Name = "ListOfConversions[" + i + "].FILE_URL_ACCESS" })
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FILE_URL_ACCESS, new { Name = "ListOfConversions[" + i + "].FILE_URL_ACCESS" })
                </td>
                <td>
                    @Html.HiddenFor(modelItem => Model.ToList()[i].FORMAT_BASE, new { Name = "ListOfConversions[" + i + "].FORMAT_BASE" })
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FORMAT_BASE, new { Name = "ListOfConversions[" + i + "].FORMAT_BASE" })
                </td>
                <td>
                    @Html.HiddenFor(modelItem => Model.ToList()[i].FORMAT_CONVERT, new { Name = "ListOfConversions[" + i + "].FORMAT_CONVERT" })
                    @Html.DisplayFor(modelItem => Model.ToList()[i].FORMAT_CONVERT, new { Name = "ListOfConversions[" + i + "].FORMAT_CONVERT" })
                </td>
                <td>
                    @Html.HiddenFor(modelItem => Model.ToList()[i].DURATION, new { Name = "ListOfConversions[" + i + "].DURATION" })
                    @Html.DisplayFor(modelItem => Model.ToList()[i].DURATION, new { Name = "ListOfConversions[" + i + "].DURATION" }) minutes
                </td>
                <td>
                    @if (Model.ToList()[i].IS_PAID != false)
                    {
                        @Html.HiddenFor(modelItem => Model.ToList()[i].STATUS, new { Name = "ListOfConversions[" + i + "].STATUS" })
                        @*@Html.DisplayFor(modelItem => Model.ToList()[i].STATUS, new { Name = "ListOfConversions[" + i + "].STATUS" })*@
                        <span style="color:green;" class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                    }
                    else
                    {
                        <span style="color:orange;" class="glyphicon glyphicon-refresh" aria-hidden="true"></span>
                       @Html.HiddenFor(modelItem => Model.ToList()[i].STATUS, new { Name = "ListOfConversions[" + i + "].STATUS" })
                       @*@Html.Raw(@UiStrings.addconversion_cart_added)*@
                    }
                </td>
                <td style="color:greenyellow;">
                    @Html.HiddenFor(modelItem => Model.ToList()[i].PRICE, new { Name = "ListOfConversions[" + i + "].PRICE" })
                    @Html.DisplayFor(modelItem => Model.ToList()[i].PRICE, new { Name = "ListOfConversions[" + i + "].PRICE" }) €
                </td>
                <td>
                    @if (Model.ToList()[i].IS_PAID == false)
                    {
                        @Html.ActionLink(@UiStrings.conversion_button_delete, "DeleteConversion", new { id = Model.ToList()[i].PK_ID_TASK }, new { @class = "btn btn-danger" })
                    }
                    else if(Model.ToList()[i].STATUS == "Effectue")
                    {
                        @Html.ActionLink(@UiStrings.conversion_button_download, "Telecharger", new { id = Model.ToList()[i].PK_ID_TASK }, new { @class = "btn btn-warning" })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

