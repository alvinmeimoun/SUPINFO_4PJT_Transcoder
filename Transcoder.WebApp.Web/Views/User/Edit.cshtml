@using Core.Transcoder.DataAccess.ViewModels;
@using Core.Transcoder.Utils.Resources
@model EditUserViewModel
<head>
    <title>@UiStrings.edit_title</title>
</head>
@{
    ViewBag.Title = @UiStrings.editprofile_page_title;
}


<div class="container">
    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "form-horizontal form-wall form-edit", role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(false)
        @Html.HiddenFor(m => m.Pk_id_user)
        @Html.HiddenFor(m => m.Password)
        @Html.HiddenFor(m => m.Username)

        <div class="form-group">
            @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DisplayFor(m => m.Username)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Firstname, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Firstname, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Firstname)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Lastname, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Lastname)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Ajouter" />
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
